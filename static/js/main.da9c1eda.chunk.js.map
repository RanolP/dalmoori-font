{"version":3,"sources":["styles/base.ts","styles/reset.ts","styles/pixelate.ts","styles/typography.ts","lib/localization/index.ts","lib/hooks/use-local-storage.ts","system/AppLocalizationProvider/index.tsx","lib/hooks/use-preferred-color-scheme.ts","styles/nord.ts","lib/theme/index.ts","system/AppThemeProvider/index.tsx","system/Icon/index.tsx","system/Navbar/index.tsx","system/Loading/index.tsx","util/array.ts","pages/Landing/Motion.tsx","lib/data/unstable-font.ts","lib/data/stable-font.ts","pages/Landing/index.tsx","App.tsx","index.tsx"],"names":["Style","theme","css","link","normal","visit","process","KeepAll","lazilyParsedBundles","SupportedLocaleList","LocaleNameMap","ftl","locale","name","fetchMessages","a","fetch","response","text","messages","fetchedMessages","resource","FluentResource","bundle","FluentBundle","addResource","f","negotiateLanguages","userLocales","fluentNegotiateLanguages","defaultLocale","useLocalStorage","key","fallbackValue","useState","localStorage","JSON","parse","state","setState","useEffect","stringify","SetUserLocalesContext","createContext","undefined","IsUserLocaleUpdatingContext","AppLocalizationProvider","children","navigator","languages","setUserLocalesRaw","useTransition","busyDelayMs","startTransition","isPending","isKorean","useMemo","includes","l10n","useSWR","join","currentLocales","Promise","all","map","bundles","ReactLocalization","suspense","data","styles","Provider","value","v","ColorSchemeList","colorSchemes","Palette","BlackVariant","brighter","nord","weak","darker","strong","WhiteVariant","DarkTheme","isDark","background","foreground","LightTheme","SetUserColorSchemeContext","AppThemeProvider","preferredColorScheme","scheme","setScheme","window","cleanupFunctions","schemeName","query","update","matches","mq","matchMedia","listener","e","addEventListener","push","removeEventListener","Object","entries","cleanup","usePreferredColorScheme","userColorScheme","setUserColorScheme","IconImage","styled","img","Icon","src","props","NavbarHeight","Header","header","BrandNavLink","NavLink","Collapse","div","OtherNavLink","Navbar","useContext","setUserLocales","localization","useLocalization","to","className","id","onChange","event","target","getString","code","Fallback","range","start","end","Array","from","length","_","index","Wrap","Section","RandomCharacter","generateCharCode","Math","floor","random","useTheme","charCode","setCharCode","setInterval","clearInterval","style","color","String","fromCharCode","Motion","elems","br","skip","href","CharacterCount","unstableFonts","stableFonts","LandingPage","brand","title","attrs","placeholder","endent","stableFont","tagName","assets","asset","rel","downloadUrl","commitHash","unstableFont","headCommit","sha","substring","message","App","fallback","basename","exact","Landing","root","document","getElementById","ReactDOM","unstable_createRoot","render","StrictMode","Reset","Pixelate","Typography","Base"],"mappings":"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","file":"static/js/main.da9c1eda.chunk.js","sourcesContent":["import { css, SerializedStyles, Theme } from '@emotion/react';\n\nconst Style = (theme: Theme): SerializedStyles => css`\n  a { \n    color: ${theme.link.normal};\n  }\n  a:visited { \n    color: ${theme.link.visit};\n  }\n`;\n\nexport default Style;\n","import { css } from '@emotion/react';\n\nconst Style = css`\n  html, body {\n    padding: 0;\n    margin: 0;\n\n    max-width: 100vw;\n  }\n\n  *, *::after, *::before {\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    min-height: 100vh;\n  }\n`;\n\nexport default Style;\n","import { css } from '@emotion/react';\n\nconst Style = css`\n  h1, h2, h3, h4, h5, h6, strong, b {\n    font-weight: normal;\n  }\n`;\n\nexport default Style;\n","import { css } from '@emotion/react';\n\nconst Style = css`\n  @font-face {\n      font-family: 'dalmoori';\n      src:\n        url('${process.env.PUBLIC_URL}/latest-stable/dalmoori.woff2') format('woff2'),\n        url('${process.env.PUBLIC_URL}/latest-stable/dalmoori.woff') format('woff'),\n        url('${process.env.PUBLIC_URL}/latest-stable/dalmoori.ttf') format('truetype')\n      ;\n  }\n\n  html {\n    font-size: 16px;\n  }\n  html, select, textarea {\n    font-family: dalmoori;\n  }\n`;\n\nexport const KeepAll = css`\n  html {\n    word-break: keep-all;\n  }\n`;\n\nexport default Style;\n","import { FluentBundle, FluentResource } from '@fluent/bundle';\nimport { negotiateLanguages as fluentNegotiateLanguages } from '@fluent/langneg';\n\nexport const SupportedLocaleList = ['ko-KR', 'en-US'] as const;\nexport type SupportedLocale = typeof SupportedLocaleList[number];\nexport const LocaleNameMap: Record<SupportedLocale, string> = {\n  'ko-KR': '한국어',\n  'en-US': 'English (US)',\n};\nexport const DefaultLocale: SupportedLocale = 'ko-KR';\n\nfunction ftl(locale: SupportedLocale, name: string): string {\n  return `${process.env.PUBLIC_URL}/l10n/${locale}/${name}.ftl`;\n}\n\nexport async function fetchMessages(locale: SupportedLocale, name: string): Promise<[string, string]> {\n  const response = await fetch(ftl(locale, name));\n  const messages = await response.text();\n  return [locale, messages];\n}\n\nexport function* lazilyParsedBundles(fetchedMessages: Array<[string, string]>): Generator<FluentBundle, void, unknown> {\n  for (const [locale, messages] of fetchedMessages) {\n    const resource = new FluentResource(messages);\n    const bundle = new FluentBundle(locale);\n    bundle.addResource(resource);\n    yield bundle;\n  }\n}\n\nexport function negotiateLanguages(userLocales: string[]): SupportedLocale[] {\n  return fluentNegotiateLanguages(\n    userLocales,\n    SupportedLocaleList as unknown as string[],\n    { defaultLocale: DefaultLocale }\n  ) as SupportedLocale[];\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\nexport default function useLocalStorage<T>(key: string, fallbackValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [state, setState] = useState(() => {\n    if (key in localStorage) {\n      try {\n        return JSON.parse(localStorage[key]);\n      } catch {\n        /* do nothing */\n      }\n    }\n    return fallbackValue;\n  });\n\n  useEffect(() => {\n    localStorage[key] = JSON.stringify(state);\n  }, [state]);\n\n  return [state, setState];\n}\n","import React, { ReactNode, ReactElement, createContext, Dispatch, SetStateAction, unstable_useTransition as useTransition, useMemo } from 'react';\n\nimport { ReactLocalization, LocalizationProvider as FluentProvider } from '@fluent/react';\nimport useSWR from 'swr';\nimport { SupportedLocale, negotiateLanguages, fetchMessages, lazilyParsedBundles } from 'lib/localization';\nimport { Global } from '@emotion/react';\nimport { KeepAll } from 'styles/typography';\nimport useLocalStorage from 'lib/hooks/use-local-storage';\n\nexport interface LocalizationProviderProps {\n  name: string;\n  children: ReactNode;\n}\n\nexport const SetUserLocalesContext = createContext<Dispatch<SetStateAction<SupportedLocale[]>> | undefined>(undefined);\nexport const IsUserLocaleUpdatingContext = createContext<boolean>(false);\n\nexport default function AppLocalizationProvider({ name, children }: LocalizationProviderProps): ReactElement {\n  const [userLocales, setUserLocalesRaw] = useLocalStorage('userLocale', navigator.languages as string[]);\n  const [startTransition, isPending] = useTransition({ busyDelayMs: 3000 });\n  const setUserLocales: Dispatch<SetStateAction<SupportedLocale[]>> = v => startTransition(() => setUserLocalesRaw(v as string[]));\n  const isKorean = useMemo(() => {\n    const currentLocales = negotiateLanguages(userLocales);\n    return currentLocales.includes('ko-KR');\n  }, [userLocales]);\n  // we know that swr *must* fetch the resource\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const l10n = useSWR(\n    'l10n[' + userLocales.join(',') + ']',\n    async (): Promise<ReactLocalization> => {\n      const currentLocales = negotiateLanguages(userLocales);\n      const fetchedMessages = await Promise.all(currentLocales.map(locale => fetchMessages(locale, name)));\n      const bundles = lazilyParsedBundles(fetchedMessages);\n      return new ReactLocalization(bundles);\n    },\n    { suspense: true }\n  ).data!;\n\n  return (\n    <FluentProvider l10n={l10n}>\n      <>\n        {isKorean && <Global styles={[KeepAll]} />}\n        <SetUserLocalesContext.Provider value={setUserLocales}>\n          <IsUserLocaleUpdatingContext.Provider value={isPending}>\n            {children}\n          </IsUserLocaleUpdatingContext.Provider>\n        </SetUserLocalesContext.Provider>\n      </>\n    </FluentProvider>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport type ColorScheme = 'dark' | 'light';\nexport const ColorSchemeList = ['dark', 'light'];\nexport const colorSchemes: Record<ColorScheme, string> = {\n  'dark': '(prefers-color-scheme: dark)',\n  'light': '(prefers-color-scheme: light)'\n};\n\nexport default function usePreferredColorScheme(): ColorScheme | null {\n  const [scheme, setScheme] = useState<ColorScheme | null>(null);\n\n  useEffect(() => {\n    if (!('matchMedia' in window)) {\n      return;\n    }\n\n    // Add listener for all themes\n    const cleanupFunctions: Array<() => void> = [];\n    for (const [schemeName, query] of Object.entries(colorSchemes)) {\n      const update = (matches: boolean): void => {\n        if (matches) {\n          setScheme(schemeName as ColorScheme);\n        }\n      };\n\n      const mq = window.matchMedia(query);\n      const listener = (e: MediaQueryListEvent): void => update(e.matches);\n      mq.addEventListener('change', listener);\n      update(mq.matches);\n\n      cleanupFunctions.push(() => mq.removeEventListener('change', listener));\n    }\n\n    // Remove listeners, no memory leaks\n    return () => {\n      for (const cleanup of cleanupFunctions) {\n        cleanup();\n      }\n    };\n  }, []);\n\n  return scheme;\n}\n","/**\nA arctic, north-bluish color palette.\nCreated for the clean- and minimal flat design pattern to achieve a optimal focus and readability for code syntax\nhighlighting and UI.\nIt consists of a total of sixteen, carefully selected, dimmed pastel colors for a eye-comfortable, but yet colorful\nambiance.\n\nStyleguide Nord\n*/\n\nconst Palette = [\n  /*\n  Base component color of \"Polar Night\".\n\n  Used for texts, backgrounds, carets and structuring characters like curly- and square brackets.\n\n  Markup:\n  <div style=\"background-color:#2E3440; width=60; height=60\"></div>\n\n  Styleguide Nord - Polar Night\n  */\n  '#2E3440',\n  /*\n  Lighter shade color of the base component color.\n\n  Used as a lighter background color for UI elements like status bars.\n\n  Markup:\n  <div style=\"background-color:#3B4252; width=60; height=60\"></div>\n\n  Styleguide Nord - Polar Night\n  */\n  '#3B4252',\n  /*\n  Lighter shade color of the base component color.\n\n  Used as line highlighting in the editor.  \n  In the UI scope it may be used as selection- and hightlight color.\n\n  Markup:\n  <div style=\"background-color:#434C5E; width=60; height=60\"></div>\n\n  Styleguide Nord - Polar Night\n  */\n  '#434C5E',\n  /*\n  Lighter shade color of the base component color.\n\n  Used for comments, invisibles, indent- and wrap guide marker.  \n  In the UI scope used as pseudoclass color for disabled elements.\n\n  Markup:\n  <div style=\"background-color:#4C566A; width=60; height=60\"></div>\n\n  Styleguide Nord - Polar Night\n  */\n  '#4C566A',\n  /*\n  Base component color of \"Snow Storm\".\n\n  Main color for text, variables, constants and attributes.\n  In the UI scope used as semi-light background depending on the theme shading design.\n\n  Markup:\n  <div style=\"background-color:#D8DEE9; width=60; height=60\"></div>\n\n  Styleguide Nord - Snow Storm\n  */\n  '#D8DEE9',\n  /*\n  Lighter shade color of the base component color.\n\n  Used as a lighter background color for UI elements like status bars.  \n  Used as semi-light background depending on the theme shading design.\n\n  Markup:\n  <div style=\"background-color:#E5E9F0; width=60; height=60\"></div>\n\n  Styleguide Nord - Snow Storm\n  */\n  '#E5E9F0',\n  /*\n  Lighter shade color of the base component color.\n\n  Used for punctuations, carets and structuring characters like curly- and square brackets.  \n  In the UI scope used as background, selection- and hightlight color depending on the theme shading design.\n\n  Markup:\n  <div style=\"background-color:#ECEFF4; width=60; height=60\"></div>\n\n  Styleguide Nord - Snow Storm\n  */\n  '#ECEFF4',\n  /*\n  Bluish core color.\n\n  Used for classes, types and documentation tags.\n\n  Markup:\n  <div style=\"background-color:#8FBCBB; width=60; height=60\"></div>\n\n  Styleguide Nord - Frost\n  */\n  '#8FBCBB',\n  /*\n  Bluish core accent color.\n\n  Represents the accent color of the color palette.  \n  Main color for primary UI elements and methods/functions.\n\n  Can be used for\n    - Markup quotes\n    - Markup link URLs\n\n  Markup:\n  <div style=\"background-color:#88C0D0; width=60; height=60\"></div>\n\n  Styleguide Nord - Frost\n  */\n  '#88C0D0',\n  /*\n  Bluish core color.\n\n  Used for language-specific syntactic/reserved support characters and keywords, operators, tags, units and\n  punctuations like (semi)colons,commas and braces.\n\n  Markup:\n  <div style=\"background-color:#81A1C1; width=60; height=60\"></div>\n\n  Styleguide Nord - Frost\n  */\n  '#81A1C1',\n  /*\n  Bluish core color.\n\n  Used for markup doctypes, import/include/require statements, pre-processor statements and at-rules (`@`).\n\n  Markup:\n  <div style=\"background-color:#5E81AC; width=60; height=60\"></div>\n\n  Styleguide Nord - Frost\n  */\n  '#5E81AC',\n  /*\n  Colorful component color.\n\n  Used for errors, git/diff deletion and linter marker.\n\n  Markup:\n  <div style=\"background-color:#BF616A; width=60; height=60\"></div>\n\n  Styleguide Nord - Aurora\n  */\n  '#BF616A',\n  /*\n  Colorful component color.\n\n  Used for annotations.\n\n  Markup:\n  <div style=\"background-color:#D08770; width=60; height=60\"></div>\n\n  Styleguide Nord - Aurora\n  */\n  '#D08770',\n  /*\n  Colorful component color.\n\n  Used for escape characters, regular expressions and markup entities.  \n  In the UI scope used for warnings and git/diff renamings.\n\n  Markup:\n  <div style=\"background-color:#EBCB8B; width=60; height=60\"></div>\n\n  Styleguide Nord - Aurora\n  */\n  '#EBCB8B',\n  /*\n  Colorful component color.\n\n  Main color for strings and attribute values.  \n  In the UI scope used for git/diff additions and success visualizations.\n\n  Markup:\n  <div style=\"background-color:#A3BE8C; width=60; height=60\"></div>\n\n  Styleguide Nord - Aurora\n  */\n  '#A3BE8C',\n  /*\n  Colorful component color.\n\n  Used for numbers.\n\n  Markup:\n  <div style=\"background-color:#B48EAD; width=60; height=60\"></div>\n\n  Styleguide Nord - Aurora\n  */\n  '#B48EAD',\n];\n\nexport default Palette;\n","import nord from 'styles/nord';\n\nexport type Color = string;\nexport interface ColorVariant {\n  weak: Color;\n  normal: Color;\n  strong: Color;\n  brighter: Color;\n  darker: Color;\n}\n\nexport interface ColorTheme {\n  isDark: boolean;\n  background: ColorVariant;\n  foreground: ColorVariant;\n  link: {\n    normal: Color;\n    visit: Color;\n  };\n}\n\nconst BlackVariant: ColorVariant = {\n  brighter: nord[2],\n  weak: nord[2],\n  normal: nord[1],\n  darker: nord[0],\n  strong: nord[0],\n};\n\nconst WhiteVariant: ColorVariant = {\n  weak: nord[4],\n  darker: nord[4],\n  normal: nord[5],\n  brighter: nord[6],\n  strong: nord[6],\n};\n\nexport const DarkTheme: ColorTheme = {\n  isDark: true,\n  background: BlackVariant,\n  foreground: WhiteVariant,\n  link: {\n    normal: nord[8],\n    visit: nord[15],\n  },\n};\n\nexport const LightTheme: ColorTheme = {\n  isDark: false,\n  background: WhiteVariant,\n  foreground: BlackVariant,\n  link: {\n    normal: nord[10],\n    visit: nord[15],\n  },\n};\n","import React, { ReactNode, ReactElement, createContext, SetStateAction, Dispatch } from 'react';\nimport usePreferredColorScheme, { ColorScheme } from 'lib/hooks/use-preferred-color-scheme';\nimport { ThemeProvider } from '@emotion/react';\nimport { ColorTheme, DarkTheme, LightTheme } from 'lib/theme';\nimport useLocalStorage from 'lib/hooks/use-local-storage';\n\nexport interface AppThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const SetUserColorSchemeContext = createContext<Dispatch<SetStateAction<ColorScheme | null>> | undefined>(undefined);\n\nexport default function AppThemeProvider({ children }: AppThemeProviderProps): ReactElement {\n  const preferredColorScheme = usePreferredColorScheme();\n  const [userColorScheme, setUserColorScheme] = useLocalStorage<ColorScheme | null>('colorTheme', null);\n  let theme: ColorTheme;\n  switch (userColorScheme ?? preferredColorScheme) {\n    case 'dark':\n    default:\n      theme = DarkTheme;\n      break;\n    case 'light':\n      theme = LightTheme;\n      break;\n  }\n\n  return (\n    <SetUserColorSchemeContext.Provider value={setUserColorScheme}>\n      <ThemeProvider theme={theme}>\n        {children}\n      </ThemeProvider>\n    </SetUserColorSchemeContext.Provider>\n  );\n}\n","import React, { ImgHTMLAttributes, ReactElement } from 'react';\nimport styled from '@emotion/styled';\n\nexport type HtmlImageProps = Omit<ImgHTMLAttributes<HTMLImageElement>, 'src'>;\nexport interface IconProps extends HtmlImageProps {\n  name: 'logo' | 'logo-circle' | 'github';\n}\n\nconst IconImage = styled.img`\n  display: inline-block;\n  height: 1em;\n  vertical-align: middle;\n`;\n\nconst Icon = ({ name, ...props }: IconProps): ReactElement => {\n  let src: string;\n  switch (name) {\n    case 'logo': {\n      src = process.env.PUBLIC_URL + '/images/logo.svg';\n      break;\n    }\n    case 'logo-circle': {\n      src = process.env.PUBLIC_URL + '/images/logo-circle.svg';\n      break;\n    }\n    case 'github': {\n      src = process.env.PUBLIC_URL + '/images/github.svg';\n      break;\n    }\n  }\n  return <IconImage src={src} {...props} />;\n};\n\nexport default Icon;\n","import React, { ReactElement, useContext } from 'react';\nimport { css } from '@emotion/react';\nimport { Localized, useLocalization } from '@fluent/react';\nimport styled from '@emotion/styled';\nimport { ColorScheme, ColorSchemeList } from 'lib/hooks/use-preferred-color-scheme';\nimport { LocaleNameMap, SupportedLocale } from 'lib/localization';\nimport { NavLink } from 'react-router-dom';\nimport { SetUserLocalesContext } from 'system/AppLocalizationProvider';\nimport { SetUserColorSchemeContext } from 'system/AppThemeProvider';\nimport Icon from 'system/Icon';\n\nexport const NavbarHeight = '64px';\n\nconst Header = styled.header`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: ${NavbarHeight};\n`;\n\nconst BrandNavLink = styled(NavLink)`\n  font-size: 32px;\n\n  margin-right: 16px;\n\n  text-decoration: none;\n  &, &:visited {\n    color: ${({ theme }) => theme.foreground.strong};\n  }\n`;\n\nconst Collapse = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, auto);\n  grid-gap: 8px;\n  margin-right: auto;\n`;\n\nconst OtherNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.foreground.normal};\n`;\n\nfunction Navbar(): ReactElement {\n  const setUserColorScheme = useContext(SetUserColorSchemeContext);\n  const setUserLocales = useContext(SetUserLocalesContext);\n  const localization = useLocalization().l10n;\n\n  return (\n    <Header>\n      <BrandNavLink to=\"/\">\n        <Icon name=\"logo-circle\" className={css`margin: 4px 0;`.name} />\n        <Localized id=\"brand\">\n          달무리\n        </Localized>\n      </BrandNavLink>\n      <Collapse>\n        <OtherNavLink to=\"/code\">\n          Code\n        </OtherNavLink>\n        <OtherNavLink to=\"/pro\">\n          Pro\n        </OtherNavLink>\n        <OtherNavLink to=\"/max\">\n          Max\n        </OtherNavLink>\n        <OtherNavLink to=\"/blog\">\n          Blog\n        </OtherNavLink>\n      </Collapse>\n      <div>\n        <select\n          onChange={(event): void => { setUserColorScheme?.(event.target.value === '$default' ? null : event.target.value as ColorScheme); }}\n        >\n          <option value=\"$default\">\n            {localization.getString('theme-system-default')}\n          </option>\n          {ColorSchemeList.map(schemeName => (\n            <option key={schemeName} value={schemeName}>\n              {localization.getString(`theme-${schemeName}`)}\n            </option>\n          ))}\n        </select>\n        <select onChange={(event): void => { setUserLocales?.([event.target.value as SupportedLocale]); }}>\n          {Object.entries(LocaleNameMap).map(([code, name]) => (\n            <option key={code} value={code}>\n              {name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </Header>\n  );\n}\n\nexport default Navbar;\n","import React, { ReactElement } from 'react';\n\nexport default function Fallback(): ReactElement {\n  return <div>Loading...</div>;\n}\n","export function range(start: number, end: number): Array<number> {\n  return Array.from({ length: end - start }).map((_, index) => start + index);\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport styled from '@emotion/styled';\nimport { NavbarHeight } from 'system/Navbar';\nimport { range } from 'util/array';\nimport { useTheme } from '@emotion/react';\nimport { Localized } from '@fluent/react';\n\nconst Wrap = styled.div`\n  width: 100%;\n  height: calc((100vh - ${NavbarHeight}) * 5);\n\n  user-select: none;\n`;\n\nconst Section = styled.div`\n  width: 100%;\n  height: calc(100vh - ${NavbarHeight});\n\n  position: sticky;\n  top: 0;\n\n  scroll-snap-type: y mandatory;\n\n  &.scroll {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n\n    span {\n      display: inline-block;\n      margin-top: 4rem;\n      padding: 0.5rem 4rem;\n      background-color: ${({ theme }) => theme.foreground.normal};\n      color: ${({ theme }) => theme.background.normal};\n      text-align: center;\n    }\n\n    z-index: 1;\n  }\n\n  &.title {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    \n    color: ${({ theme }) => theme.foreground.strong};\n    font-size: 6rem;\n\n    .hidden {\n      visibility: hidden;\n    }\n\n    span.wrap {\n      background: linear-gradient(115deg, ${({ theme }) => theme.isDark ? 'hsl(180 85% 75%), hsl(240 85% 65%)' : 'hsl(180 85% 45%), hsl(240 85% 55%)'});\n      color: transparent;\n      background-clip: text;\n    }\n  }\n  \n\n  div.left, div.right {\n    flex: 1;\n    height: 100%;\n\n    display: grid;\n    grid-template-rows: repeat(auto-fill, auto);\n    grid-gap: auto;\n\n    padding: 4rem;\n    \n    font-size: 2rem;\n  }\n\n  div.left {\n    justify-items: start;\n  }\n\n  div.right {\n    justify-items: end;\n  }\n\n  &.font-project {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    \n    font-size: 2rem;\n\n    span.text {\n      font-size: 3rem;\n      display: inline-block;\n      margin-top: 13rem;\n    }\n  }\n\n  &.description {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n\n    span.text {\n      font-size: 2rem;\n      display: inline-block;\n      margin-bottom: 10rem;\n    }\n  }\n`;\n\nconst CharacterCount = 10;\n\ninterface RandomCharacterProps {\n  index: number;\n}\n\nfunction RandomCharacter({ index }: RandomCharacterProps): ReactElement {\n  function generateCharCode(): number {\n    return Math.floor(0xAC00 + Math.random() * (11172 + 1));\n  }\n\n  const { isDark } = useTheme();\n  const [charCode, setCharCode] = useState(generateCharCode);\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setCharCode(generateCharCode());\n    }, 1500);\n\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <span style={{\n      color: `hsla(${360 * index / CharacterCount}, ${isDark ? '75%, 85%, 70%' : '45%, 35%, 70%'})`,\n    }}>\n      {String.fromCharCode(charCode)}\n    </span>\n  );\n}\n\nexport default function Motion(): ReactElement {\n  return (\n    <Wrap>\n      <Section className=\"scroll\">\n        <Localized\n          id=\"landing-try-scroll-down\"\n          elems={{\n            br: <br />,\n            skip: <a href=\"#download\" />,\n          }}\n        >\n          <span />\n        </Localized>\n      </Section>\n\n      <Section className=\"title\">\n        <span className=\"wrap\">\n          <Localized id=\"landing-dal\" />\n          <span className=\"hidden\">\n            <Localized id=\"landing-moo\" />\n            <Localized id=\"landing-ri\" />\n          </span>\n        </span>\n      </Section>\n\n      <Section className=\"title\">\n        <span className=\"wrap\">\n          <span className=\"hidden\">\n            <Localized id=\"landing-dal\" />\n          </span>\n          <Localized id=\"landing-moo\" />\n          <span className=\"hidden\">\n            <Localized id=\"landing-ri\" />\n          </span>\n        </span>\n      </Section>\n\n      <Section className=\"title\">\n        <div className=\"left\">\n          {range(0, CharacterCount).map(index => <RandomCharacter index={index} key={index} />)}\n        </div>\n        <span className=\"wrap\">\n          <span className=\"hidden\">\n            <Localized id=\"landing-dal\" />\n            <Localized id=\"landing-moo\" />\n          </span>\n          <Localized id=\"landing-ri\" />\n        </span>\n        <div className=\"right\">\n          {range(0, CharacterCount).map(index => <RandomCharacter index={CharacterCount - 1 - index} key={index} />)}\n        </div>\n      </Section>\n\n      <Section className=\"font-project\">\n        <span className=\"text\">\n          <Localized id=\"landing-font-project\" />\n        </span>\n      </Section>\n    </Wrap>\n  );\n}\n","import unstableFonts from './unstable-font.data.json';\n\nexport interface UnstableFont {\n  downloadUrl: string;\n  expired: boolean;\n  expiresAt: string;\n  sizeInBytes: number;\n  headCommit: {\n    sha: string;\n    message: string;\n  }\n}\n\nexport default unstableFonts as UnstableFont[];\n","import stableFonts from './stable-font.data.json';\n\ninterface ReleaseFont {\n  tagName: string;\n  commitHash: string;\n  publishedAt: string;\n  assets: Array<{\n    name: string;\n    downloadUrl: string;\n  }>;\n  body: string;\n}\n\nexport default stableFonts as ReleaseFont[];\n","import React, { ReactElement } from 'react';\nimport Motion from './Motion';\nimport styled from '@emotion/styled';\nimport { NavbarHeight } from 'system/Navbar';\nimport { Localized } from '@fluent/react';\nimport Palette from 'styles/nord';\nimport endent from 'endent';\nimport unstableFonts from '../../lib/data/unstable-font';\nimport stableFonts from '../../lib/data/stable-font';\n\nconst Wrap = styled.div`\n  height: calc(100vh - ${NavbarHeight});\n  overflow-y: scroll;\n\n  &::after {\n    display: block;\n    height: 1px;\n    content: ' ';\n    scroll-snap-align: end;\n  }\n\n  main {\n    max-width: 52rem;\n    margin: 4rem auto;\n    font-size: 1.5rem;\n\n    h2 {\n      background: linear-gradient(115deg, ${({ theme }) => theme.isDark ? 'hsl(150 85% 75%), hsl(210 85% 65%)' : 'hsl(160 80% 45%), hsl(210 80% 55%)'});\n      color: transparent;\n      background-clip: text;\n    }\n\n    strong {\n      background: linear-gradient(115deg, ${({ theme }) => theme.isDark ? 'hsl(150 45% 85%), hsl(210 45% 75%)' : 'hsl(160 40% 45%), hsl(210 40% 55%)'});\n      color: transparent;\n      background-clip: text;\n    }\n\n    ul {\n      list-style-type: '- ';\n    }\n\n    [data-note]::after {\n      content: attr(data-note);\n      vertical-align: super;\n      font-size: 1rem;\n    }\n\n    .brand {\n      background: linear-gradient(115deg, ${({ theme }) => theme.isDark ? 'hsl(180 85% 75%), hsl(240 85% 65%)' : 'hsl(180 85% 45%), hsl(240 85% 55%)'});\n      color: transparent;\n      background-clip: text;\n    }\n\n    h2 {\n      font-size: 3rem;\n    }\n\n    ul.labeled {\n      line-height: 1.5;\n    }\n\n    .label {\n      margin-right: 1rem;\n      padding: 0.1rem 0.3rem;\n    }\n\n    .label.green {\n      background-color: ${Palette[14]};\n      color: ${Palette[1]};\n    }\n\n    .label.yellow {\n      background-color: ${Palette[13]};\n      color: ${Palette[1]};\n    }\n\n    .label.blue {\n      background-color: ${Palette[8]};\n      color: ${Palette[1]};\n    }\n\n    textarea {\n      font-size: inherit;\n      border: none;\n      background-color: ${({ theme }) => theme.background.darker};\n      color: ${({ theme }) => theme.foreground.normal};\n\n      resize: none;\n\n      width: 100%;\n      height: 16rem;\n\n      padding: 2rem;\n    }\n\n    summary {\n      cursor: pointer;\n    }\n\n    small {\n      font-size: 1rem;\n    }\n  }\n`;\n\nfunction LandingPage(): ReactElement {\n  return (\n    <Wrap>\n      <Motion />\n\n      <main>\n        <section id=\"support-range\">\n          <h2>\n            <Localized\n              id=\"landing-section-support-range-title\"\n              elems={{\n                br: <br />\n              }}\n            >\n              <span />\n            </Localized>\n          </h2>\n          <Localized\n            id=\"landing-section-support-range-description\"\n            elems={{\n              strong: <strong />,\n              brand: <span className=\"brand\" />,\n            }}\n          >\n            <span />\n          </Localized>\n\n          <ul>\n            <li>\n              <span title=\"Basic Latin\">\n                <Localized id=\"support-range-basic-latin\">\n                  <span />\n                </Localized>\n                {' '}\n                95/95\n              </span>\n            </li>\n            <li>\n              <span title=\"Hangul Compatibility Jamo\">\n                <Localized id=\"support-range-hangul-compatibility-jamo\" attrs={{ 'data-note': true }}>\n                  <span />\n                </Localized>\n                {' '}\n                51/94\n              </span>\n            </li>\n            <li>\n              <span title=\"Hangul Syllable\">\n                <Localized id=\"support-range-hangul-syllable\" />{' '}\n                11172/11172\n              </span>\n            </li>\n          </ul>\n        </section>\n        <section id=\"readability\">\n          <h2>\n            <Localized\n              id=\"landing-section-readability-title\"\n              elems={{\n                br: <br />\n              }}\n            >\n              <span />\n            </Localized>\n          </h2>\n          <Localized\n            id=\"landing-section-readability-description\"\n            elems={{\n              strong: <strong />,\n              brand: <span className=\"brand\" />,\n            }}\n          >\n            <span />\n          </Localized>\n        </section>\n        <section id=\"beauty\">\n          <h2>\n            <Localized\n              id=\"landing-section-beauty-title\"\n              elems={{\n                br: <br />\n              }}\n            >\n              <span />\n            </Localized>\n          </h2>\n          <Localized\n            id=\"landing-section-beauty-description\"\n            elems={{\n              strong: <strong />,\n              brand: <span className=\"brand\" />,\n            }}\n          >\n            <span />\n          </Localized>\n        </section>\n        <section id=\"free\">\n          <h2>\n            <Localized\n              id=\"landing-section-free-title\"\n              elems={{\n                br: <br />\n              }}\n            >\n              <span />\n            </Localized>\n          </h2>\n          <Localized\n            id=\"landing-section-free-description\"\n            elems={{\n              strong: <strong />,\n              brand: <span className=\"brand\" />,\n            }}\n          >\n            <span />\n          </Localized>\n\n          <ul className=\"labeled\">\n            <li>\n              <span className=\"label green\">\n                <Localized id=\"landing-section-free-label-allow\" />\n              </span>\n              <Localized id=\"landing-section-free-allow-use\" />\n            </li>\n            <li>\n              <span className=\"label yellow\">\n                <Localized id=\"landing-section-free-label-require\" />\n              </span>\n              <Localized id=\"landing-section-free-require-license-mark\" />\n            </li>\n            <li>\n              <span className=\"label yellow\">\n                <Localized id=\"landing-section-free-label-require\" />\n              </span>\n              <Localized id=\"landing-section-free-require-modification-mark\" />\n            </li>\n            <li>\n              <span className=\"label blue\">\n                <Localized id=\"landing-section-free-label-inform\" />\n              </span>\n              <Localized id=\"landing-section-free-inform-no-guarantee\" />\n            </li>\n          </ul>\n        </section>\n        <section id=\"try\">\n          <h2>\n            <Localized\n              id=\"landing-section-try-title\"\n              elems={{\n                br: <br />\n              }}\n            >\n              <span />\n            </Localized>\n          </h2>\n          <textarea placeholder={endent`\n            다람쥐 헌 쳇바퀴에 타고파.\n            그 늙다리만 본선에 진출케 투표해.\n\n            The quick brown fox jumps over the lazy dog.\n          `} />\n        </section>\n        <section id=\"download\">\n          <h2>\n            <Localized\n              id=\"landing-section-download-title\"\n              elems={{\n                br: <br />\n              }}\n            >\n              <span />\n            </Localized>\n          </h2>\n          <details>\n            <summary>\n              <Localized id=\"landing-section-download-stable-channel-title\" />\n            </summary>\n            <ul>\n              {stableFonts.map(stableFont => (\n                <li key={stableFont.commitHash}>\n                  {stableFont.tagName}\n                  <ul>\n                    {stableFont.assets.map(asset => (\n                      <li key={asset.name}>\n                        <a rel=\"download\" href={asset.downloadUrl}>\n                          {asset.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n              ))}\n            </ul>\n          </details>\n          <details>\n            <summary>\n              <Localized id=\"landing-section-download-unstable-channel-title\" />\n            </summary>\n            <blockquote>\n              <small>\n                <Localized id=\"landing-section-download-unstable-channel-description\" />\n              </small>\n            </blockquote>\n            <ul>\n              {unstableFonts.map(unstableFont => (\n                <li key={unstableFont.headCommit.sha}>\n                  <a rel=\"download\" href={unstableFont.downloadUrl}>\n                    {unstableFont.headCommit.sha.substring(0, 7)}: {unstableFont.headCommit.message}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </details>\n        </section>\n      </main>\n    </Wrap >\n  );\n}\n\nexport default LandingPage;\n","import React, { ReactElement, Suspense } from 'react';\nimport styled from '@emotion/styled';\n\nimport AppLocalizationProvider from 'system/AppLocalizationProvider';\nimport Navbar from 'system/Navbar';\nimport Loading from 'system/Loading';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from 'pages/Landing';\n\nconst Wrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n\n  background: ${({ theme }) => theme.background.normal};\n  color: ${({ theme }) => theme.foreground.normal};\n\n  h1, h2, h3, h4, h5, h6, strong, b {\n    color: ${({ theme }) => theme.foreground.strong};\n  }\n`;\n\nfunction App(): ReactElement {\n  return (\n    <Wrap>\n      <Suspense fallback={<Loading />}>\n        <AppLocalizationProvider name=\"app\">\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <>\n              <Navbar />\n              <Switch>\n                <Route to=\"/\" exact={true}>\n                  <LandingPage />\n                </Route>\n              </Switch>\n            </>\n          </BrowserRouter>\n        </AppLocalizationProvider>\n      </Suspense>\n    </Wrap>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Global } from '@emotion/react';\nimport Base from 'styles/base';\nimport Reset from 'styles/reset';\nimport Pixelate from 'styles/pixelate';\nimport Typography from 'styles/typography';\nimport App from 'App';\nimport AppThemeProvider from 'system/AppThemeProvider';\n\n// we know that there *must* exists the root element.\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst root = document.getElementById('root')!;\n\nReactDOM.unstable_createRoot(root).render(\n  <React.StrictMode>\n    <AppThemeProvider>\n      <Global styles={[Reset, Pixelate, Typography, Base]} />\n      <App />\n    </AppThemeProvider>\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}